{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/DesignQuestioning/client/src/Pages/managePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport './pages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ManagePage = props => {\n  _s();\n  const [userNum, setUserNum] = useState(0);\n  const [state, setState] = useState(\"No Request\");\n  const [logData, setLogData] = useState([]);\n  const userNumChnage = event => {\n    setUserNum(event.target.value);\n  };\n  function convertToCSV(objArray) {\n    const array = typeof objArray !== 'object' ? JSON.parse(objArray) : objArray;\n    let str = '';\n\n    // Extract headers\n    const headers = Object.keys(array[0]);\n    str += headers.join(',') + '\\r\\n';\n\n    // Extract data\n    for (let i = 0; i < array.length; i++) {\n      let line = '';\n      for (let index in headers) {\n        if (line !== '') line += ',';\n        line += array[i][headers[index]];\n      }\n      str += line + '\\r\\n';\n    }\n    return str;\n  }\n  const getLogData = async feedback => {\n    setState(\"downloading...\");\n    await axios({\n      method: \"POST\",\n      url: \"/getLogData\",\n      headers: {\n        Authorization: \"Bearer \" + props.token\n      },\n      data: {\n        userNum: userNum\n      }\n    }).then(response => {\n      const res = response.data;\n      // setLogData(res.logData);\n      // console.log(res.logData);\n      const csv = convertToCSV(res.logData);\n      downloadCSV(csv, \"P\" + userNum + \".csv\");\n      setState(\"P\" + userNum + \" Done.\");\n    }).catch(error => {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n  };\n  function downloadCSV(csv, filename) {\n    const blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.setAttribute('download', filename);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  // function download() {\n  //     const csv = convertToCSV(logData);\n  //     downloadCSV(csv, \"P\" +userNum + \".csv\");\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"managepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: userNumChnage,\n      value: userNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"state: \", state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getLogData,\n      children: \"Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 13\n  }, this);\n};\n_s(ManagePage, \"89oiA28aMDnrH85rE0Yl0VKQnUA=\");\n_c = ManagePage;\nvar _c;\n$RefreshReg$(_c, \"ManagePage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ManagePage","props","_s","userNum","setUserNum","state","setState","logData","setLogData","userNumChnage","event","target","value","convertToCSV","objArray","array","JSON","parse","str","headers","Object","keys","join","i","length","line","index","getLogData","feedback","method","url","Authorization","token","data","then","response","res","csv","downloadCSV","catch","error","console","log","status","filename","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/DesignQuestioning/client/src/Pages/managePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from \"axios\";\nimport './pages.css'\n\nexport const ManagePage = (props) => {\n\n    const [userNum, setUserNum] = useState(0);\n    const [state, setState] = useState(\"No Request\");\n    const [logData, setLogData] = useState([]);\n\n    const userNumChnage = (event) => {\n        setUserNum(event.target.value);\n    };\n\n    function convertToCSV(objArray) {\n        const array = typeof objArray !== 'object' ? JSON.parse(objArray) : objArray;\n        let str = '';\n      \n        // Extract headers\n        const headers = Object.keys(array[0]);\n        str += headers.join(',') + '\\r\\n';\n      \n        // Extract data\n        for (let i = 0; i < array.length; i++) {\n            let line = '';\n            for (let index in headers) {\n                if (line !== '') line += ',';\n                line += array[i][headers[index]];\n            }\n            str += line + '\\r\\n';\n        }\n        return str;\n    }\n\n    const getLogData = async (feedback) => {\n        setState(\"downloading...\");\n        await axios({\n            method: \"POST\",\n            url: \"/getLogData\",\n            headers: {\n                Authorization: \"Bearer \" + props.token,\n          },\n          data: { userNum: userNum },\n        })\n        .then((response) => {\n        const res = response.data;\n            // setLogData(res.logData);\n            // console.log(res.logData);\n            const csv = convertToCSV(res.logData);\n            downloadCSV(csv, \"P\" +userNum + \".csv\");\n            setState(\"P\" +userNum + \" Done.\");\n        })\n        .catch((error) => {\n        if (error.response) {\n            console.log(error.response);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n        }\n        });\n    };\n\n    function downloadCSV(csv, filename) {\n        const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    // function download() {\n    //     const csv = convertToCSV(logData);\n    //     downloadCSV(csv, \"P\" +userNum + \".csv\");\n    // }\n\n    return(\n            <div className='managepage'>\n                <input onChange={userNumChnage} value={userNum}/>\n                <div>state: {state}</div>\n                <button onClick={getLogData}>Download</button>\n                <button>Save</button>\n            </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,YAAY,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,aAAa,GAAIC,KAAK,IAAK;IAC7BN,UAAU,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,SAASC,YAAYA,CAACC,QAAQ,EAAE;IAC5B,MAAMC,KAAK,GAAG,OAAOD,QAAQ,KAAK,QAAQ,GAAGE,IAAI,CAACC,KAAK,CAACH,QAAQ,CAAC,GAAGA,QAAQ;IAC5E,IAAII,GAAG,GAAG,EAAE;;IAEZ;IACA,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC;IACrCG,GAAG,IAAIC,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM;;IAEjC;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;MACnC,IAAIE,IAAI,GAAG,EAAE;MACb,KAAK,IAAIC,KAAK,IAAIP,OAAO,EAAE;QACvB,IAAIM,IAAI,KAAK,EAAE,EAAEA,IAAI,IAAI,GAAG;QAC5BA,IAAI,IAAIV,KAAK,CAACQ,CAAC,CAAC,CAACJ,OAAO,CAACO,KAAK,CAAC,CAAC;MACpC;MACAR,GAAG,IAAIO,IAAI,GAAG,MAAM;IACxB;IACA,OAAOP,GAAG;EACd;EAEA,MAAMS,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACnCtB,QAAQ,CAAC,gBAAgB,CAAC;IAC1B,MAAMT,KAAK,CAAC;MACRgC,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,aAAa;MAClBX,OAAO,EAAE;QACLY,aAAa,EAAE,SAAS,GAAG9B,KAAK,CAAC+B;MACvC,CAAC;MACDC,IAAI,EAAE;QAAE9B,OAAO,EAAEA;MAAQ;IAC3B,CAAC,CAAC,CACD+B,IAAI,CAAEC,QAAQ,IAAK;MACpB,MAAMC,GAAG,GAAGD,QAAQ,CAACF,IAAI;MACrB;MACA;MACA,MAAMI,GAAG,GAAGxB,YAAY,CAACuB,GAAG,CAAC7B,OAAO,CAAC;MACrC+B,WAAW,CAACD,GAAG,EAAE,GAAG,GAAElC,OAAO,GAAG,MAAM,CAAC;MACvCG,QAAQ,CAAC,GAAG,GAAEH,OAAO,GAAG,QAAQ,CAAC;IACrC,CAAC,CAAC,CACDoC,KAAK,CAAEC,KAAK,IAAK;MAClB,IAAIA,KAAK,CAACL,QAAQ,EAAE;QAChBM,OAAO,CAACC,GAAG,CAACF,KAAK,CAACL,QAAQ,CAAC;QAC3BM,OAAO,CAACC,GAAG,CAACF,KAAK,CAACL,QAAQ,CAACQ,MAAM,CAAC;QAClCF,OAAO,CAACC,GAAG,CAACF,KAAK,CAACL,QAAQ,CAAChB,OAAO,CAAC;MACvC;IACA,CAAC,CAAC;EACN,CAAC;EAED,SAASmB,WAAWA,CAACD,GAAG,EAAEO,QAAQ,EAAE;IAChC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACT,GAAG,CAAC,EAAE;MAAEU,IAAI,EAAE;IAA0B,CAAC,CAAC;IACjE,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;IACrCG,IAAI,CAACM,YAAY,CAAC,UAAU,EAAEV,QAAQ,CAAC;IACvCK,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;IAC/BA,IAAI,CAACS,KAAK,CAAC,CAAC;IACZR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,IAAI,CAAC;EACnC;;EAEA;EACA;EACA;EACA;;EAEA,oBACQjD,OAAA;IAAK4D,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvB7D,OAAA;MAAO8D,QAAQ,EAAEpD,aAAc;MAACG,KAAK,EAAET;IAAQ;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjDlE,OAAA;MAAA6D,QAAA,GAAK,SAAO,EAACvD,KAAK;IAAA;MAAAyD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzBlE,OAAA;MAAQmE,OAAO,EAAEvC,UAAW;MAAAiC,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9ClE,OAAA;MAAA6D,QAAA,EAAQ;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAElB,CAAC;AAAA/D,EAAA,CAhFYF,UAAU;AAAAmE,EAAA,GAAVnE,UAAU;AAAA,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}