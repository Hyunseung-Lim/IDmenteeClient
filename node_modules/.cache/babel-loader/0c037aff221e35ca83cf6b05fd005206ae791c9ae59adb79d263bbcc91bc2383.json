{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/DesignQuestioning/client/src/Components/chat/chat.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport '../chat.css';\nimport { ChatBubble } from './chatbubble';\n// import { TypingAnimation } from './typinganimation';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Chat = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [chatlog, setChatlog] = useState(props.chatData);\n  const [feedback, setFeedback] = useState(\"\");\n  const [triggerResponse, setTriggerResponse] = useState(false);\n  const [isDisable, setIsDisable] = useState(false);\n  const [isQuestionUpdated, setIsQuestionUpdated] = useState(false);\n  const [isReset, setIsReset] = useState(false);\n  const divRef = useRef(null);\n  const textareaRef = useRef(null);\n  const giveFeedback = () => {\n    if (feedback !== \"\") {\n      setChatlog([...chatlog, {\n        \"speaker\": \"instructor\",\n        \"content\": feedback\n      }]);\n      setTriggerResponse(true);\n    }\n  };\n  const handleFeedbackChange = event => {\n    setFeedback(event.target.value);\n    adjustHeight();\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      giveFeedback();\n    }\n  };\n  useEffect(() => {\n    // console.log(triggerResponse);\n    async function fetchData() {\n      if (triggerResponse) {\n        await props.getResponse(feedback);\n        setTriggerResponse(false); // Reset trigger\n        setFeedback(\"\");\n        setIsDisable(true);\n      }\n    }\n    fetchData();\n  }, [triggerResponse]);\n  const typingAnimation = ({\n    isDisable,\n    reset\n  }) => {\n    _s();\n    const [displayText, setDisplayText] = useState('');\n    const [index, setIndex] = useState(0);\n    const outputs = ['음...그게.........', '어...그니까요........', '그건...말이죠.........'];\n\n    // Function to get a random output\n    const getRandomOutput = () => {\n      const randomIndex = Math.floor(Math.random() * outputs.length);\n      return outputs[randomIndex];\n    };\n    useEffect(() => {\n      let typingInterval;\n      let text = getRandomOutput();\n      if (isDisable) {\n        typingInterval = setInterval(() => {\n          setIndex(prevIndex => {\n            if (prevIndex < text.length) {\n              setDisplayText(text.substring(0, prevIndex + 1));\n              return prevIndex + 1;\n            } else {\n              // Reset to start the animation again\n              setDisplayText('');\n              return 0;\n            }\n          });\n        }, 800);\n      }\n      return () => {\n        clearInterval(typingInterval);\n        setDisplayText(''); // Reset the display text when stopping\n        setIndex(0); // Reset the index when stopping\n      };\n    }, [isDisable]);\n    useEffect(() => {\n      if (reset) {\n        setDisplayText('');\n        setIndex(0);\n      }\n    }, [reset]);\n    return displayText;\n  };\n  _s(typingAnimation, \"95B8bh0xPliQBmSw56kZn3WXMcE=\");\n  useEffect(() => {\n    setChatlog(props.chatData);\n    setTimeout(() => {\n      setIsQuestionUpdated(false);\n    }, 500);\n    async function askQuestion() {\n      await props.getQuestion();\n      setIsQuestionUpdated(true);\n      setIsReset(true);\n      setTimeout(() => setIsReset(false), 100);\n    }\n    if (isDisable) {\n      if (props.questionChecker) {\n        askQuestion();\n      } else if (!isQuestionUpdated) {\n        setIsDisable(false);\n      }\n    }\n  }, [props.chatData]);\n  useEffect(() => {\n    if (divRef.current) {\n      divRef.current.scrollTo({\n        top: divRef.current.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  }, [chatlog, isDisable]);\n  const adjustHeight = () => {\n    if (textareaRef.current) {\n      // Reset height to recalculate\n      textareaRef.current.style.height = '14px';\n      // Set height based on the scroll height which reflects the content height\n      const maxHeight = 112; // Example max height in pixels for about 5 lines\n      textareaRef.current.style.height = `${Math.min(textareaRef.current.scrollHeight, maxHeight)}px`;\n    }\n  };\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n      adjustHeight(); // Adjust height on initial render to ensure it fits the content\n    }\n  }, [feedback]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatUI\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatWindow\",\n        ref: divRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatContainer\",\n          children: [chatlog.map((chat, index) => /*#__PURE__*/_jsxDEV(ChatBubble, {\n            speaker: chat.speaker,\n            content: chat.content,\n            mode: 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this)), isDisable ? /*#__PURE__*/_jsxDEV(ChatBubble, {\n            speaker: 'student',\n            content: typingAnimation({\n              isDisable,\n              isReset\n            }),\n            mode: 1\n          }, 'umm', false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isDisable ? 'disabled bottombar' : 'bottombar',\n        style: {\n          height: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          id: \"bottomtextarea\",\n          style: {\n            height: 'auto'\n          },\n          value: feedback,\n          onKeyDown: handleKeyDown,\n          onChange: handleFeedbackChange,\n          disabled: isDisable,\n          placeholder: \"Feeback to Student...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"chatBtn\",\n          src: \"images/chatBtn.png\",\n          alt: \"chatBtn\",\n          onClick: giveFeedback,\n          disabled: isDisable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s2(Chat, \"AkXwWoxwX9MhwbvGKmdgL1A0Jvs=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","ChatBubble","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","props","_s2","_s","$RefreshSig$","chatlog","setChatlog","chatData","feedback","setFeedback","triggerResponse","setTriggerResponse","isDisable","setIsDisable","isQuestionUpdated","setIsQuestionUpdated","isReset","setIsReset","divRef","textareaRef","giveFeedback","handleFeedbackChange","event","target","value","adjustHeight","handleKeyDown","key","fetchData","getResponse","typingAnimation","reset","displayText","setDisplayText","index","setIndex","outputs","getRandomOutput","randomIndex","Math","floor","random","length","typingInterval","text","setInterval","prevIndex","substring","clearInterval","setTimeout","askQuestion","getQuestion","questionChecker","current","scrollTo","top","scrollHeight","behavior","style","height","maxHeight","min","children","className","ref","map","chat","speaker","content","mode","fileName","_jsxFileName","lineNumber","columnNumber","id","onKeyDown","onChange","disabled","placeholder","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/DesignQuestioning/client/src/Components/chat/chat.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport axios from 'axios';\nimport '../chat.css'\n\nimport { ChatBubble } from './chatbubble';\n// import { TypingAnimation } from './typinganimation';\n\nexport const Chat = (props) => {\n\n    const [chatlog, setChatlog] = useState(props.chatData);\n    const [feedback, setFeedback] = useState(\"\");\n    const [triggerResponse, setTriggerResponse] = useState(false);\n    const [isDisable, setIsDisable] = useState(false);\n    const [isQuestionUpdated, setIsQuestionUpdated] = useState(false);\n    const [isReset, setIsReset] = useState(false);\n    const divRef = useRef(null);\n    const textareaRef = useRef(null);\n\n    const giveFeedback = () => {\n        if(feedback !== \"\") {\n            setChatlog([...chatlog, {\"speaker\":\"instructor\", \"content\": feedback}]);\n            setTriggerResponse(true);\n        }\n    }\n\n    const handleFeedbackChange = (event) => {\n        setFeedback(event.target.value);\n        adjustHeight();\n    };\n\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            giveFeedback();\n        }\n    };\n\n    useEffect(() => {\n        // console.log(triggerResponse);\n        async function fetchData() {\n            if (triggerResponse) {\n                await props.getResponse(feedback);\n                setTriggerResponse(false); // Reset trigger\n                setFeedback(\"\");\n                setIsDisable(true);\n            }\n        }\n        fetchData();\n    }, [triggerResponse]);\n\n    const typingAnimation = ({ isDisable ,reset }) => {\n        const [displayText, setDisplayText] = useState('');\n        const [index, setIndex] = useState(0);\n        const outputs = ['음...그게.........', '어...그니까요........', '그건...말이죠.........'];\n    \n        // Function to get a random output\n        const getRandomOutput = () => {\n            const randomIndex = Math.floor(Math.random() * outputs.length);\n            return outputs[randomIndex];\n        };\n    \n        useEffect(() => {\n            let typingInterval;\n            let text = getRandomOutput();\n    \n            if (isDisable) {\n                typingInterval = setInterval(() => {\n                    setIndex(prevIndex => {\n                        if (prevIndex < text.length) {\n                            setDisplayText(text.substring(0, prevIndex + 1));\n                            return prevIndex + 1;\n                        } else {\n                            // Reset to start the animation again\n                            setDisplayText('');\n                            return 0;\n                        }\n                    });\n                }, 800);\n            }\n    \n            return () => {\n                clearInterval(typingInterval);\n                setDisplayText(''); // Reset the display text when stopping\n                setIndex(0);        // Reset the index when stopping\n            };\n        }, [isDisable]);\n    \n        useEffect(() => {\n            if (reset) {\n                setDisplayText('');\n                setIndex(0);\n            }\n        }, [reset]);\n    \n        return displayText;\n    };\n\n    useEffect(() => {\n        setChatlog(props.chatData);\n        setTimeout(() => {\n            setIsQuestionUpdated(false);\n        }, 500);\n        async function askQuestion() {\n            await props.getQuestion();\n            setIsQuestionUpdated(true);\n            setIsReset(true);\n            setTimeout(() => setIsReset(false), 100);\n        }\n        if(isDisable) {\n            if(props.questionChecker) {\n                askQuestion();\n            }\n            else if(!isQuestionUpdated) {\n                setIsDisable(false);\n            }\n        }\n    }, [props.chatData]);\n\n    useEffect(() => {\n        if (divRef.current) {\n            divRef.current.scrollTo({\n                top: divRef.current.scrollHeight,\n                behavior: 'smooth'\n            });\n        }\n    }, [chatlog, isDisable]);\n\n    const adjustHeight = () => {\n        if (textareaRef.current) {\n            // Reset height to recalculate\n            textareaRef.current.style.height = '14px';\n            // Set height based on the scroll height which reflects the content height\n            const maxHeight = 112; // Example max height in pixels for about 5 lines\n            textareaRef.current.style.height = `${Math.min(textareaRef.current.scrollHeight, maxHeight)}px`;\n        }\n    };\n    \n\n    useEffect(() => {\n        if (textareaRef.current) {\n            textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n            adjustHeight(); // Adjust height on initial render to ensure it fits the content\n        }\n    }, [feedback]);\n\n    return(\n        <>\n            <div className='chatUI'>\n                <div className='chatWindow' ref={divRef}>\n                    <div className='chatContainer'>\n                        {chatlog.map((chat, index) => (\n                            <ChatBubble\n                                key = {index}\n                                speaker = {chat.speaker}\n                                content = {chat.content}\n                                mode = {1}\n                            />\n                        ))}\n                        {isDisable ? \n                        <ChatBubble\n                                key = {'umm'}\n                                speaker = {'student'}\n                                content = {typingAnimation({isDisable, isReset})}\n                                mode = {1}\n                            />\n                        :\n                        null\n                        }\n                    </div>\n                </div>\n                <div className={isDisable ? 'disabled bottombar': 'bottombar'} style={{height: 'auto'}}>\n                    <textarea ref={textareaRef} id='bottomtextarea' style={{height: 'auto'}} value={feedback} onKeyDown={handleKeyDown} onChange={handleFeedbackChange} disabled={isDisable} placeholder='Feeback to Student...'/>\n                    <img className='chatBtn' src='images/chatBtn.png' alt='chatBtn' onClick={giveFeedback} disabled={isDisable}/>\n                </div>\n            </div>\n        </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}