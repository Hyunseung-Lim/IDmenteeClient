{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/DesignQuestioning/client/src/Components/chat/chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../chat.css';\nimport { ChatBubble } from './chatbubble';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Chat = props => {\n  _s();\n  const [chatlog, setChatlog] = useState(props.chatData);\n  const [feedback, setFeedback] = useState(\"\");\n  const [triggerResponse, setTriggerResponse] = useState(false);\n  const giveFeedback = () => {\n    if (feedback !== \"\") {\n      setChatlog([...chatlog, {\n        \"speaker\": \"instructor\",\n        \"content\": feedback\n      }]);\n      setTriggerResponse(true);\n    }\n  };\n  const handleFeedbackChange = event => {\n    setFeedback(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      giveFeedback();\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      if (triggerResponse) {\n        await props.getResponse(feedback);\n        setTriggerResponse(false); // Reset trigger\n        setFeedback(\"\");\n      }\n    }\n    fetchData();\n  }, [triggerResponse]);\n  useEffect(() => {\n    setChatlog(props.chatData);\n  }, [props.chatData]);\n\n  // const getResponse = () => {\n  //     axios({\n  //         method: \"POST\",\n  //         url:\"/response\",\n  //         headers: {\n  //             Authorization: 'Bearer ' + props.token\n  //         },\n  //         data: {feedback: feedback}\n  //         })\n  //         .then((response) => {\n  //             const res =response.data\n  //             setChatlog([...chatlog, {\"speaker\":\"student\", \"content\": res.response}]);\n  //         }).catch((error) => {\n  //         if (error.response) {\n  //             console.log(error.response)\n  //             console.log(error.response.status)\n  //             console.log(error.response.headers)\n  //         }\n  //     })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatUI\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatWindow\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatContainer\",\n          children: chatlog.map((chat, index) => /*#__PURE__*/_jsxDEV(ChatBubble, {\n            speaker: chat.speaker,\n            content: chat.content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottombar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: feedback,\n          onKeyPress: handleKeyPress,\n          onChange: handleFeedbackChange,\n          placeholder: \"Feeback to Student...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"chatBtn\",\n          src: \"images/chatBtn.png\",\n          alt: \"chatBtn\",\n          onClick: giveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Chat, \"q+yIiGXjASnw6nJIhQ39Id9DdJE=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","axios","ChatBubble","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","props","_s","chatlog","setChatlog","chatData","feedback","setFeedback","triggerResponse","setTriggerResponse","giveFeedback","handleFeedbackChange","event","target","value","handleKeyPress","key","fetchData","getResponse","children","className","map","chat","index","speaker","content","fileName","_jsxFileName","lineNumber","columnNumber","onKeyPress","onChange","placeholder","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/DesignQuestioning/client/src/Components/chat/chat.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport '../chat.css'\n\nimport { ChatBubble } from './chatbubble';\n\n\nexport const Chat = (props) => {\n\n    const [chatlog, setChatlog] = useState(props.chatData);\n    const [feedback, setFeedback] = useState(\"\");\n    const [triggerResponse, setTriggerResponse] = useState(false);\n\n    const giveFeedback = () => {\n        if(feedback !== \"\") {\n            setChatlog([...chatlog, {\"speaker\":\"instructor\", \"content\": feedback}]);\n            setTriggerResponse(true);\n        }\n    }\n\n    const handleFeedbackChange = (event) => {\n        setFeedback(event.target.value);\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            giveFeedback();\n        }\n    };\n\n    useEffect(() => {\n        async function fetchData() {\n            if (triggerResponse) {\n                await props.getResponse(feedback);\n                setTriggerResponse(false); // Reset trigger\n                setFeedback(\"\");\n            }\n        }\n        fetchData();\n    }, [triggerResponse]);\n\n    useEffect(() => {\n        setChatlog(props.chatData);\n    }, [props.chatData]);\n\n    // const getResponse = () => {\n    //     axios({\n    //         method: \"POST\",\n    //         url:\"/response\",\n    //         headers: {\n    //             Authorization: 'Bearer ' + props.token\n    //         },\n    //         data: {feedback: feedback}\n    //         })\n    //         .then((response) => {\n    //             const res =response.data\n    //             setChatlog([...chatlog, {\"speaker\":\"student\", \"content\": res.response}]);\n    //         }).catch((error) => {\n    //         if (error.response) {\n    //             console.log(error.response)\n    //             console.log(error.response.status)\n    //             console.log(error.response.headers)\n    //         }\n    //     })\n    // }\n\n    return(\n        <>\n            <div className='chatUI'>\n                <div className='chatWindow'>\n                    <div className='chatContainer'>\n                        {chatlog.map((chat, index) => (\n                            <ChatBubble\n                                key = {index}\n                                speaker = {chat.speaker}\n                                content = {chat.content}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <div className='bottombar'>\n                    <input value={feedback} onKeyPress={handleKeyPress} onChange={handleFeedbackChange} placeholder='Feeback to Student...'/>\n                    <img className='chatBtn' src='images/chatBtn.png' alt='chatBtn' onClick={giveFeedback}/>\n                </div>\n            </div>\n        </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}