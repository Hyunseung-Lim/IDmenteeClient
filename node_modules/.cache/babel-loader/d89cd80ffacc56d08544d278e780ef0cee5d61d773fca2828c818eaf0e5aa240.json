{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nexport const TypingAnimation = ({\n  interval = 500,\n  isDisable,\n  reset\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState('');\n  const [index, setIndex] = useState(0);\n  const outputs = ['음...그게.........', '어...그니까요........', '그건...말이죠.........'];\n\n  // Function to get a random output\n  const getRandomOutput = () => {\n    const randomIndex = Math.floor(Math.random() * outputs.length);\n    return outputs[randomIndex];\n  };\n  useEffect(() => {\n    let typingInterval;\n    let text = getRandomOutput();\n    if (isDisable) {\n      typingInterval = setInterval(() => {\n        setIndex(prevIndex => {\n          if (prevIndex < text.length) {\n            setDisplayText(text.substring(0, prevIndex + 1));\n            return prevIndex + 1;\n          } else {\n            // Reset to start the animation again\n            setDisplayText('');\n            return 0;\n          }\n        });\n      }, interval);\n    }\n    return () => {\n      clearInterval(typingInterval);\n      setDisplayText(''); // Reset the display text when stopping\n      setIndex(0); // Reset the index when stopping\n    };\n  }, [isDisable, interval]);\n  useEffect(() => {\n    if (reset) {\n      setDisplayText('');\n      setIndex(0);\n    }\n  }, [reset]);\n  return {\n    displayText\n  };\n};\n_s(TypingAnimation, \"95B8bh0xPliQBmSw56kZn3WXMcE=\");\n_c = TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","TypingAnimation","interval","isDisable","reset","_s","displayText","setDisplayText","index","setIndex","outputs","getRandomOutput","randomIndex","Math","floor","random","length","typingInterval","text","setInterval","prevIndex","substring","clearInterval","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/DesignQuestioning/client/src/Components/chat/typinganimation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const TypingAnimation = ({ interval = 500, isDisable ,reset }) => {\n    const [displayText, setDisplayText] = useState('');\n    const [index, setIndex] = useState(0);\n    const outputs = ['음...그게.........', '어...그니까요........', '그건...말이죠.........'];\n\n    // Function to get a random output\n    const getRandomOutput = () => {\n        const randomIndex = Math.floor(Math.random() * outputs.length);\n        return outputs[randomIndex];\n    };\n\n    useEffect(() => {\n        let typingInterval;\n        let text = getRandomOutput();\n\n        if (isDisable) {\n            typingInterval = setInterval(() => {\n                setIndex(prevIndex => {\n                    if (prevIndex < text.length) {\n                        setDisplayText(text.substring(0, prevIndex + 1));\n                        return prevIndex + 1;\n                    } else {\n                        // Reset to start the animation again\n                        setDisplayText('');\n                        return 0;\n                    }\n                });\n            }, interval);\n        }\n\n        return () => {\n            clearInterval(typingInterval);\n            setDisplayText(''); // Reset the display text when stopping\n            setIndex(0);        // Reset the index when stopping\n        };\n    }, [isDisable, interval]);\n\n    useEffect(() => {\n        if (reset) {\n            setDisplayText('');\n            setIndex(0);\n        }\n    }, [reset]);\n\n    return {displayText};\n};"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAO,MAAMC,eAAe,GAAGA,CAAC;EAAEC,QAAQ,GAAG,GAAG;EAAEC,SAAS;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMW,OAAO,GAAG,CAAC,iBAAiB,EAAE,kBAAkB,EAAE,mBAAmB,CAAC;;EAE5E;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,OAAO,CAACM,MAAM,CAAC;IAC9D,OAAON,OAAO,CAACE,WAAW,CAAC;EAC/B,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZ,IAAIiB,cAAc;IAClB,IAAIC,IAAI,GAAGP,eAAe,CAAC,CAAC;IAE5B,IAAIR,SAAS,EAAE;MACXc,cAAc,GAAGE,WAAW,CAAC,MAAM;QAC/BV,QAAQ,CAACW,SAAS,IAAI;UAClB,IAAIA,SAAS,GAAGF,IAAI,CAACF,MAAM,EAAE;YACzBT,cAAc,CAACW,IAAI,CAACG,SAAS,CAAC,CAAC,EAAED,SAAS,GAAG,CAAC,CAAC,CAAC;YAChD,OAAOA,SAAS,GAAG,CAAC;UACxB,CAAC,MAAM;YACH;YACAb,cAAc,CAAC,EAAE,CAAC;YAClB,OAAO,CAAC;UACZ;QACJ,CAAC,CAAC;MACN,CAAC,EAAEL,QAAQ,CAAC;IAChB;IAEA,OAAO,MAAM;MACToB,aAAa,CAACL,cAAc,CAAC;MAC7BV,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;MACpBE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAQ;IACxB,CAAC;EACL,CAAC,EAAE,CAACN,SAAS,EAAED,QAAQ,CAAC,CAAC;EAEzBF,SAAS,CAAC,MAAM;IACZ,IAAII,KAAK,EAAE;MACPG,cAAc,CAAC,EAAE,CAAC;MAClBE,QAAQ,CAAC,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,OAAO;IAACE;EAAW,CAAC;AACxB,CAAC;AAACD,EAAA,CA7CWJ,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}