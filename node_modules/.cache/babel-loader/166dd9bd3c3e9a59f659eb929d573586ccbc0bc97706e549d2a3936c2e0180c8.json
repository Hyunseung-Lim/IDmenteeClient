{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/DesignQuestioning/client/src/Components/board/board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './board.css';\nimport { StickyNote } from './stickynote';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Board = props => {\n  _s();\n  const [currentNotesData, setCurrentNotesData] = useState(props.notesData);\n  const parentRef = useRef(null);\n  const addNote = () => {\n    setCurrentNotesData(prevList => [...prevList, {\n      \"content\": \"\",\n      \"position\": {\n        \"x\": 0,\n        \"y\": 0\n      }\n    }]);\n  };\n  const moveNote = (id, newPos) => {\n    setCurrentNotesData(currentNotesData.map(noteData => {\n      return noteData.id === id ? {\n        ...noteData,\n        position: newPos\n      } : noteData;\n    }));\n  };\n  const deleteNote = id => {\n    setCurrentNotesData(currentNotesData => currentNotesData.filter(noteData => noteData.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boardUI\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"noteContainer\",\n          ref: parentRef,\n          children: currentNotesData.map((noteData, index) => /*#__PURE__*/_jsxDEV(StickyNote, {\n            initialPos: noteData.position,\n            initalContent: noteData.content,\n            id: index,\n            moveNote: moveNote,\n            deleteNote: () => deleteNote(index),\n            parentRef: parentRef\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottombar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNote,\n          children: \"add note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNote(0),\n          children: \"delete note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Board, \"hp2aebEg76X/ebW9mxc9e91D+HA=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useRef","StickyNote","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","props","_s","currentNotesData","setCurrentNotesData","notesData","parentRef","addNote","prevList","moveNote","id","newPos","map","noteData","position","deleteNote","filter","children","className","ref","index","initialPos","initalContent","content","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/DesignQuestioning/client/src/Components/board/board.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './board.css'\n\nimport { StickyNote } from './stickynote';\n\nexport const Board = (props) => {\n\n    const [currentNotesData, setCurrentNotesData] = useState(props.notesData);\n    const parentRef = useRef(null);\n\n    const addNote = () => {\n        setCurrentNotesData(prevList => [...prevList, {\"content\": \"\", \"position\": {\"x\": 0, \"y\": 0}}]);\n    }\n\n    const moveNote = (id, newPos) => {\n        setCurrentNotesData(currentNotesData.map(noteData => {\n            return noteData.id === id ? { ...noteData, position: newPos } : noteData;\n        }));\n    };\n\n    const deleteNote = (id) => {\n        setCurrentNotesData(currentNotesData => currentNotesData.filter(noteData => noteData.id !== id));\n    }\n\n    return(\n        <>\n            <div className='board'>\n                <div className='boardUI'>\n                    <div className='noteContainer' ref={parentRef}>\n                        {currentNotesData.map((noteData, index) => (\n                            <StickyNote\n                                key = {index}\n                                initialPos={noteData.position}\n                                initalContent={noteData.content}\n                                id={index}\n                                moveNote={moveNote}\n                                deleteNote ={() => deleteNote(index)}\n                                parentRef={parentRef}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <div className='bottombar'>\n                    <button onClick={addNote}>add note</button>\n                    <button onClick={() => deleteNote(0)}>delete note</button>\n                    <button>save</button>\n                </div>\n            </div>\n        </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}