{"ast":null,"code":"var _jsxFileName = \"/Users/imhyeonseung/Desktop/GIT/DesignQuestioning/client/src/Pages/modePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Topbar } from '../Components/Topbar/topbar';\nimport { useNavigate } from 'react-router-dom';\nimport './pages.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModePage = props => {\n  _s();\n  const navigate = useNavigate();\n  const modeButtonClick = async mode => {\n    try {\n      await axios({\n        method: \"POST\",\n        url: \"/mode\",\n        headers: {\n          Authorization: 'Bearer ' + props.token\n        },\n        data: {\n          mode: mode\n        }\n      }).then(response => {}).catch(error => {});\n      navigate('/start');\n    } catch (error) {\n      //\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {\n      removeToken: props.removeToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modepage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modeinstruction\",\n        children: \"\\uC9C4\\uD589\\uC790\\uC758 \\uC548\\uB0B4\\uC5D0 \\uB530\\uB77C\\uC11C \\uBAA8\\uB4DC\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modeBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modeBtn\",\n          onClick: () => modeButtonClick(1),\n          children: \"Mode A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modeBtn\",\n          onClick: () => modeButtonClick(2),\n          children: \"Mode B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ModePage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = ModePage;\nvar _c;\n$RefreshReg$(_c, \"ModePage\");","map":{"version":3,"names":["React","useState","Topbar","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ModePage","props","_s","navigate","modeButtonClick","mode","axios","method","url","headers","Authorization","token","data","then","response","catch","error","children","removeToken","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/imhyeonseung/Desktop/GIT/DesignQuestioning/client/src/Pages/modePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Topbar } from '../Components/Topbar/topbar';\nimport { useNavigate } from 'react-router-dom';\n\nimport './pages.css'\n\nexport const ModePage = (props) => {\n\n    const navigate = useNavigate();\n\n    const modeButtonClick = async (mode) => {\n        try {\n            await axios({\n                method: \"POST\",\n                url:\"/mode\",\n                headers: {\n                    Authorization: 'Bearer ' + props.token\n                },\n                data: {mode: mode}\n            })\n            .then((response) => {\n            \n            }).catch((error) => {\n            \n            })\n            navigate('/start');\n        } catch (error) {\n            //\n        }\n    };\n\n    return(\n        <>\n            <Topbar removeToken={props.removeToken}/>\n            <div className='modepage'>\n                <div className='modeinstruction'>\n                    진행자의 안내에 따라서 모드를 선택해주세요.\n                </div>\n                <div className='modeBox'>\n                    <div className='modeBtn' onClick={() => modeButtonClick(1)}>\n                        Mode A\n                    </div>\n                    <div className='modeBtn' onClick={() => modeButtonClick(2)}>\n                        Mode B\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,6BAA6B;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpB,OAAO,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE/B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,eAAe,GAAG,MAAOC,IAAI,IAAK;IACpC,IAAI;MACA,MAAMC,KAAK,CAAC;QACRC,MAAM,EAAE,MAAM;QACdC,GAAG,EAAC,OAAO;QACXC,OAAO,EAAE;UACLC,aAAa,EAAE,SAAS,GAAGT,KAAK,CAACU;QACrC,CAAC;QACDC,IAAI,EAAE;UAACP,IAAI,EAAEA;QAAI;MACrB,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAK,CAEpB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK,CAEpB,CAAC,CAAC;MACFb,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZ;IAAA;EAER,CAAC;EAED,oBACInB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACIpB,OAAA,CAACH,MAAM;MAACwB,WAAW,EAAEjB,KAAK,CAACiB;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzCzB,OAAA;MAAK0B,SAAS,EAAC,UAAU;MAAAN,QAAA,gBACrBpB,OAAA;QAAK0B,SAAS,EAAC,iBAAiB;QAAAN,QAAA,EAAC;MAEjC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNzB,OAAA;QAAK0B,SAAS,EAAC,SAAS;QAAAN,QAAA,gBACpBpB,OAAA;UAAK0B,SAAS,EAAC,SAAS;UAACC,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAAC,CAAC,CAAE;UAAAa,QAAA,EAAC;QAE5D;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNzB,OAAA;UAAK0B,SAAS,EAAC,SAAS;UAACC,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAAC,CAAC,CAAE;UAAAa,QAAA,EAAC;QAE5D;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACR,CAAC;AAEX,CAAC;AAAApB,EAAA,CA3CYF,QAAQ;EAAA,QAEAL,WAAW;AAAA;AAAA8B,EAAA,GAFnBzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}